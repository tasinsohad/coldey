// Backend - Node.js with Express
// Handles email sending, tracking, and warm-up management

const express = require('express');
const nodemailer = require('nodemailer');
const cors = require('cors');
const dotenv = require('dotenv');
const { Pool } = require('pg');
const bodyParser = require('body-parser');

dotenv.config();

const app = express();
app.use(express.json());
app.use(cors());
app.use(bodyParser.urlencoded({ extended: true }));

// PostgreSQL Database Setup
const pool = new Pool({
    user: process.env.DB_USER,
    host: process.env.DB_HOST,
    database: process.env.DB_NAME,
    password: process.env.DB_PASSWORD,
    port: process.env.DB_PORT,
});

// SMTP Configuration (Using Free SMTP options)
const transporter = nodemailer.createTransport({
    host: process.env.SMTP_HOST,
    port: process.env.SMTP_PORT,
    secure: false, // true for 465, false for 587
    auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
    }
});

// Send Email API
app.post('/send-email', async (req, res) => {
    const { to, subject, text } = req.body;
    try {
        let info = await transporter.sendMail({
            from: process.env.SMTP_USER,
            to,
            subject,
            text
        });
        res.json({ message: 'Email sent!', info });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// Email Warm-up Feature (Simulated for now)
app.post('/warm-up', async (req, res) => {
    const { emailCount } = req.body;
    try {
        for (let i = 0; i < emailCount; i++) {
            await transporter.sendMail({
                from: process.env.SMTP_USER,
                to: process.env.WARMUP_RECEIVER,
                subject: 'Warm-up Email',
                text: 'This is an automatic warm-up email.'
            });
        }
        res.json({ message: `Sent ${emailCount} warm-up emails.` });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// Start Server
app.listen(5000, () => {
    console.log('Server is running on port 5000');
});
